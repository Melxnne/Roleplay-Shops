<template>
    <div class="shop-container">
        <!-- Close Button -->
        <button class="close-button" @click="closeShop">X</button>

        <!-- Shop Items -->
        <div class="shop-items">
            <h2>{{ currentShop }} Shop</h2>
            <div class="items-grid">
                <div class="shop-item" v-for="item in shopItems" :key="item.id">
                    <img :src="`/images/${item.image}`" alt="Item image" />
                    <div class="item-info">
                        <span class="item-name">{{ item.name }}</span>
                        <span class="item-price">
                            <span class="price-badge">${{ item.price }}</span>
                        </span>
                    </div>
                    <button class="add-button" @click="addToCart(item)">
                        <i class="fas fa-plus"></i>
                    </button>
                </div>
            </div>
        </div>

        <!-- Cart -->
        <div class="cart">
            <h3>Your Cart</h3>
            <div class="cart-items">
                <ul>
                    <li v-for="item in cart" :key="item.id" class="cart-item">
                        <img :src="`/images/${item.image}`" alt="Item image" class="cart-item-image" />
                        <div class="cart-item-details">
                            <span class="cart-item-name">{{ item.name }}</span>
                            <div class="cart-item-quantity">
                                <button @click="removeFromCart(item)">-</button>
                                {{ item.quantity }}
                                <button @click="addToCart(item)">+</button>
                            </div>
                            <span class="cart-item-price">${{ item.price * item.quantity }}</span>
                        </div>
                    </li>
                </ul>
            </div>
            <!-- Fixed Total and Buttons -->
            <div class="cart-footer">
                <span class="cart-total">Total: ${{ cart.reduce((total, item) => total + item.price * item.quantity, 0) }}</span>
                <div class="payment-options">
                    <button class="payment-button card" @click="purchaseItems('Card')">Pay with Card</button>
                    <button class="payment-button cash" @click="purchaseItems('Cash')">Pay with Cash</button>
                </div>
            </div>
        </div>
    </div>
</template>

<script lang="ts" setup>
import { ref, computed } from 'vue';
import { useEvents } from '../../../../webview/composables/useEvents';

const Events = useEvents();

const shops = ref({
    Strawberry: [
        { id: 1, name: 'Energy Drink', price: 15, quantity: 10, image: 'energy_drink.png' },
        { id: 2, name: 'Bread', price: 5, quantity: 20, image: 'bread.png' },
        { id: 3, name: 'Energy Drink', price: 15, quantity: 10, image: 'energy_drink.png' },
        { id: 4, name: 'Energy Drink', price: 15, quantity: 10, image: 'energy_drink.png' },
        { id: 5, name: 'Energy Drink', price: 15, quantity: 10, image: 'energy_drink.png' },
    ],
    Vinewood: [
        { id: 3, name: 'Wine', price: 50, quantity: 5, image: 'wine.png' },
        { id: 4, name: 'Water Bottle', price: 5, quantity: 15, image: 'water_bottle.png' },
    ],
});

const currentShop = ref('Strawberry');
const shopItems = computed(() => shops.value[currentShop.value] || []);
const cart = ref([]);

function addToCart(item) {
    const cartItem = cart.value.find((cartItem) => cartItem.id === item.id);
    if (cartItem) {
        cartItem.quantity++;
    } else {
        cart.value.push({ ...item, quantity: 1 });
    }
}

function removeFromCart(item) {
    const cartItem = cart.value.find((cartItem) => cartItem.id === item.id);
    if (cartItem && cartItem.quantity > 1) {
        cartItem.quantity--;
    } else {
        cart.value = cart.value.filter((cartItem) => cartItem.id !== item.id);
    }
}

function purchaseItems(paymentMethod) {
    console.log(`Purchased Items (${paymentMethod}):`, cart.value);
    cart.value = [];
}

function closeShop() {
    Events.emit('closeShop');
}
</script>

<style scoped>
.shop-container {
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    display: flex;
    gap: 20px;
    background: linear-gradient(145deg, #202020, #303030);
    color: white;
    padding: 30px;
    border-radius: 15px;
    width: 80%;
    height: 80%;
    z-index: 1000;
    border: 1px solid rgba(255, 255, 255, 0.1);
    overflow: hidden;
}

.shop-items {
    flex: 3;
    background: linear-gradient(145deg, #2b2b2b, #3b3b3b);
    border-radius: 15px;
    padding: 15px;
    overflow-y: auto;
}

.items-grid {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 15px;
}

.shop-item {
    background: radial-gradient(circle, #404040, #505050);
    border-radius: 15px;
    padding: 10px;
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 10px;
    transition: transform 0.2s ease;
    position: relative;
}

.shop-item:hover {
    transform: scale(1.05);
}

.item-name {
    margin-bottom: 5px;
}

.item-price {
    position: absolute;
    bottom: 10px;
    right: 10px;
}

.price-badge {
    background: #4caf50;
    color: white;
    padding: 5px 10px;
    border-radius: 50px;
}

.add-button {
    background: none;
    border: none;
    cursor: pointer;
    color: white;
    font-size: 18px;
}

.cart {
    flex: 1;
    display: flex;
    flex-direction: column;
    background: linear-gradient(135deg, #1c1c1c, #292929);
    border-radius: 15px;
    overflow: hidden;
}

.cart-items {
    flex: 1;
    overflow-y: auto;
    padding: 10px;
}

.cart-items::-webkit-scrollbar {
    width: 8px;
}

.cart-items::-webkit-scrollbar-thumb {
    background: #4caf50;
    border-radius: 4px;
}

.cart-item {
    display: grid;
    grid-template-columns: 10% 1fr;
    gap: 10px;
    align-items: center;
    padding: 10px;
    border-radius: 10px;
    background: radial-gradient(circle, #303030, #404040);
    margin-bottom: 10px;
}

.cart-item-image {
    width: 50px;
    height: auto;
}

.cart-footer {
    padding: 10px;
    background: #202020;
    border-top: 1px solid rgba(255, 255, 255, 0.1);
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.payment-button {
    background: #4caf50;
    color: white;
    padding: 10px;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    margin-left: 10px;
}

.payment-button:hover {
    opacity: 0.9;
}

.close-button {
    position: absolute;
    top: 10px;
    right: 10px;
    background: #ff4040;
    color: white;
    padding: 10px;
    border-radius: 50%;
    font-size: 18px;
    cursor: pointer;
}
</style>
